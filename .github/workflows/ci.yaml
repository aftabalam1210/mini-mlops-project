name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install "dvc[http]"

      # âœ… Run DVC pipeline from scratch with secrets for MLflow logging to DagsHub
      - name: Run DVC pipeline with MLflow tracking
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          dvc repro --force

      - name: Run model tests
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          python -m unittest tests/test_model.py

      
      - name: Promote model to production
        # This step runs only if all previous steps in the job have succeeded
        if: success()
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: python promote_model.py

      - name: Run Flask app tests
        # This step also runs only if all previous steps have succeeded
        if: success()
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: python -m unittest tests/test_flask_app.py

    # docker work here 

      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest .

      - name: Push Docker image to Docker Hub
        if: success()
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest